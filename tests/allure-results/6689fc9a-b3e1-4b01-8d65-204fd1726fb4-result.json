{"name": "Selecting Color", "status": "failed", "statusDetails": {"message": "AssertionError: assert 4 == 2\n +  where 4 = <bound method Products.count_items of <pages.products_page.Products object at 0x00000284934E79E0>>()\n +    where <bound method Products.count_items of <pages.products_page.Products object at 0x00000284934E79E0>> = <pages.products_page.Products object at 0x00000284934E79E0>.count_items\n +      where <pages.products_page.Products object at 0x00000284934E79E0> = <select_color.TestSelectColor object at 0x00000284929677D0>.products_page", "trace": "self = <select_color.TestSelectColor object at 0x00000284929677D0>\n\n    @allure.title('Selecting Color')\n    @allure.description('Verify the selection of a specific color from the collection.')\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_select_color(self):\n        allure.attach(\n            'This test verifies the selection of a specific color from the collection.',\n            'Test Description'\n        )\n        with allure.step(\"Count the items before selecting a color\"):\n>           assert self.products_page.count_items() == 2\nE           assert 4 == 2\nE            +  where 4 = <bound method Products.count_items of <pages.products_page.Products object at 0x00000284934E79E0>>()\nE            +    where <bound method Products.count_items of <pages.products_page.Products object at 0x00000284934E79E0>> = <pages.products_page.Products object at 0x00000284934E79E0>.count_items\nE            +      where <pages.products_page.Products object at 0x00000284934E79E0> = <select_color.TestSelectColor object at 0x00000284929677D0>.products_page\n\nselect_color.py:41: AssertionError"}, "description": "Verify the selection of a specific color from the collection.", "steps": [{"name": "Count the items before selecting a color", "status": "failed", "statusDetails": {"message": "AssertionError: assert 4 == 2\n +  where 4 = <bound method Products.count_items of <pages.products_page.Products object at 0x00000284934E79E0>>()\n +    where <bound method Products.count_items of <pages.products_page.Products object at 0x00000284934E79E0>> = <pages.products_page.Products object at 0x00000284934E79E0>.count_items\n +      where <pages.products_page.Products object at 0x00000284934E79E0> = <select_color.TestSelectColor object at 0x00000284929677D0>.products_page\n", "trace": "  File \"C:\\Users\\achiy\\Desktop\\MadisonWeb_auto\\MadisonWeb\\tests\\products\\select_color.py\", line 41, in test_select_color\n    assert self.products_page.count_items() == 2\n"}, "steps": [{"name": "Counting items", "status": "passed", "start": 1708393408171, "stop": 1708393408189}], "start": 1708393408171, "stop": 1708393408190}], "attachments": [{"name": "Test Description", "source": "6c05a956-76f8-40d3-bfb4-58f471f95456-attachment.attach"}], "start": 1708393408171, "stop": 1708393408190, "uuid": "51b55f36-8c01-4f84-bfbe-673410e57041", "historyId": "05cae785f90ef14cb2c14272f58d7698", "testCaseId": "05cae785f90ef14cb2c14272f58d7698", "fullName": "select_color.TestSelectColor#test_select_color", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "Product Selection"}, {"name": "story", "value": "Selecting Colors"}, {"name": "epic", "value": "User Shopping"}, {"name": "suite", "value": "select_color"}, {"name": "subSuite", "value": "TestSelectColor"}, {"name": "host", "value": "LAPTOP-V5QEKNGK"}, {"name": "thread", "value": "27860-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "select_color"}]}