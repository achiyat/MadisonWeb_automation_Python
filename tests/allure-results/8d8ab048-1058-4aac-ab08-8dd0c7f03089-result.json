{"name": "Counting Items", "status": "failed", "statusDetails": {"message": "AssertionError: assert 2 == 1\n +  where 2 = <bound method Products.count_items of <pages.products_page.Products object at 0x000001E5822C3C50>>()\n +    where <bound method Products.count_items of <pages.products_page.Products object at 0x000001E5822C3C50>> = <pages.products_page.Products object at 0x000001E5822C3C50>.count_items\n +      where <pages.products_page.Products object at 0x000001E5822C3C50> = <count_items.TestCountItems object at 0x000001E5822C1460>.products_page", "trace": "self = <count_items.TestCountItems object at 0x000001E5822C1460>\n\n    @allure.title('Counting Items')\n    @allure.description('Verify the count of items in the collection.')\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_count_items(self):\n        allure.attach(\n            'This test verifies the count of items in the collection.',\n            'Test Description'\n        )\n        with allure.step(\"Count the items in the collection\"):\n>           assert self.products_page.count_items() == 1\nE           assert 2 == 1\nE            +  where 2 = <bound method Products.count_items of <pages.products_page.Products object at 0x000001E5822C3C50>>()\nE            +    where <bound method Products.count_items of <pages.products_page.Products object at 0x000001E5822C3C50>> = <pages.products_page.Products object at 0x000001E5822C3C50>.count_items\nE            +      where <pages.products_page.Products object at 0x000001E5822C3C50> = <count_items.TestCountItems object at 0x000001E5822C1460>.products_page\n\ncount_items.py:41: AssertionError"}, "description": "Verify the count of items in the collection.", "steps": [{"name": "Count the items in the collection", "status": "failed", "statusDetails": {"message": "AssertionError: assert 2 == 1\n +  where 2 = <bound method Products.count_items of <pages.products_page.Products object at 0x000001E5822C3C50>>()\n +    where <bound method Products.count_items of <pages.products_page.Products object at 0x000001E5822C3C50>> = <pages.products_page.Products object at 0x000001E5822C3C50>.count_items\n +      where <pages.products_page.Products object at 0x000001E5822C3C50> = <count_items.TestCountItems object at 0x000001E5822C1460>.products_page\n", "trace": "  File \"C:\\Users\\achiy\\Desktop\\MadisonWeb_auto\\MadisonWeb\\tests\\products\\count_items.py\", line 41, in test_count_items\n    assert self.products_page.count_items() == 1\n"}, "steps": [{"name": "Counting items", "status": "passed", "start": 1708393379369, "stop": 1708393379386}], "start": 1708393379369, "stop": 1708393379386}], "attachments": [{"name": "Test Description", "source": "22c7b8aa-6793-44c8-8d39-31cde9fec3ae-attachment.attach"}], "start": 1708393379368, "stop": 1708393379388, "uuid": "87465ce7-e710-480b-bb61-849203d1d3d2", "historyId": "9b1ae664c438014a3d6f56fa873a9ab8", "testCaseId": "9b1ae664c438014a3d6f56fa873a9ab8", "fullName": "count_items.TestCountItems#test_count_items", "labels": [{"name": "severity", "value": "normal"}, {"name": "story", "value": "Counting Items"}, {"name": "feature", "value": "Product Counting"}, {"name": "epic", "value": "User Shopping"}, {"name": "suite", "value": "count_items"}, {"name": "subSuite", "value": "TestCountItems"}, {"name": "host", "value": "LAPTOP-V5QEKNGK"}, {"name": "thread", "value": "31256-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "count_items"}]}